+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2017-07-27_16-03-00
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2017-07-27_16-03-00
+ ./tools/train_net.py --gpu 0 --solver models/pascal_voc/VGG16/FP_Net_end2end/solver.prototxt --weights output/FP_Net_end2end/voc_2007_trainval/fpn_iter_70000.caffemodel --imdb voc_2007_trainval --iters 70000 --cfg experiments/cfgs/FP_Net_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/FP_Net_end2end.yml', gpu_id=0, imdb_name='voc_2007_trainval', max_iters=70000, pretrained_model='output/FP_Net_end2end/voc_2007_trainval/fpn_iter_70000.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/FP_Net_end2end/solver.prototxt')
Using config:
{'DATA_DIR': '/home/ubuntu/Work/brbchen/unskychen/faster_rcnn_min_ohem/data',
 'DEDUP_BOXES': -1.0,
 'EPS': 1e-14,
 'EXP_DIR': 'FP_Net_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/ubuntu/Work/brbchen/unskychen/faster_rcnn_min_ohem/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/ubuntu/Work/brbchen/unskychen/faster_rcnn_min_ohem',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 520,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 8,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 1000,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [375],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.7,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 520,
           'OHEM_NMS_THRESH': 0.7,
           'OHEM_USE_NMS': True,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 8,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [375],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 5000,
           'USE_FLIPPED': True,
           'USE_OHEM': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
0
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /home/ubuntu/Work/brbchen/unskychen/faster_rcnn_min_ohem/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
done
33102 roidb entries
Output will be saved to `/home/ubuntu/Work/brbchen/unskychen/faster_rcnn_min_ohem/output/FP_Net_end2end/voc_2007_trainval`
Filtered 0 roidb entries: 33102 -> 33102
Computing bounding-box regression targets...
bbox target means:
[[ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]
 [ 0.  0.  0.  0.]]
[ 0.  0.  0.  0.]
bbox target stdevs:
[[ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]
 [ 0.1  0.1  0.2  0.2]]
[ 0.1  0.1  0.2  0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0727 16:03:22.818706 27947 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/FP_Net_end2end/train.prototxt"
base_lr: 0.002
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0001
stepsize: 50000
snapshot: 0
snapshot_prefix: "fpn"
average_loss: 100
iter_size: 2
I0727 16:03:22.818791 27947 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/FP_Net_end2end/train.prototxt
I0727 16:03:22.820279 27947 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 21"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 72
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 36
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 21"
  }
}
layer {
  name: "roi_pool5_readonly"
  type: "ROIPooling"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5_readonly"
  propagate_down: false
  propagate_down: false
  roi_pooling_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6_readonly"
  type: "InnerProduct"
  bottom: "pool5_readonly"
  top: "fc6_readonly"
  param {
    name: "fc6_w"
  }
  param {
    name: "fc6_b"
  }
  propagate_down: false
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6_readonly"
  type: "ReLU"
  bottom: "fc6_readonly"
  top: "fc6_readonly"
  propagate_down: false
}
layer {
  name: "drop6_readonly"
  type: "Dropout"
  bottom: "fc6_readonly"
  top: "fc6_readonly"
  propagate_down: false
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_readonly"
  type: "InnerProduct"
  bottom: "fc6_readonly"
  top: "fc7_readonly"
  param {
    name: "fc7_w"
  }
  param {
    name: "fc7_b"
  }
  propagate_down: false
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7_readonly"
  type: "ReLU"
  bottom: "fc7_readonly"
  top: "fc7_readonly"
  propagate_down: false
}
layer {
  name: "drop7_readonly"
  type: "Dropout"
  bottom: "fc7_readonly"
  top: "fc7_readonly"
  propagate_down: false
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score_readonly"
  type: "InnerProduct"
  bottom: "fc7_readonly"
  top: "cls_score_readonly"
  param {
    name: "cls_score_w"
  }
  param {
    name: "cls_score_b"
  }
  propagate_down: false
  inner_product_param {
    num_output: 21
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred_readonly"
  type: "InnerProduct"
  bottom: "fc7_readonly"
  top: "bbox_pred_readonly"
  param {
    name: "bbox_pred_w"
  }
  param {
    name: "bbox_pred_b"
  }
  propagate_down: false
  inner_product_param {
    num_output: 84
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "cls_prob_readonly"
  type: "Softmax"
  bottom: "cls_score_readonly"
  top: "cls_prob_readonly"
  propagate_down: false
}
layer {
  name: "hard_roi_mining"
  type: "Python"
  bottom: "cls_prob_readonly"
  bottom: "bbox_pred_readonly"
  bottom: "rois"
  bottom: "labels"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "rois_hard"
  top: "labels_hard"
  top: "bbox_targets_hard"
  top: "bbox_inside_weights_hard"
  top: "bbox_outside_weights_hard"
  propagate_down: false
  propagate_down: false
  propagate_down: false
  propagate_down: false
  propagate_down: false
  propagate_down: false
  propagate_down: false
  python_param {
    module: "roi_data_layer.layer"
    layer: "OHEMDataLayer"
    param_str: "\'num_classes\': 21"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5_3"
  bottom: "rois_hard"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    name: "fc6_w"
    lr_mult: 1
  }
  param {
    name: "fc6_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    name: "fc7_w"
    lr_mult: 1
  }
  param {
    name: "fc7_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    name: "cls_score_w"
    lr_mult: 1
  }
  param {
    name: "cls_score_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 21
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    name: "bbox_pred_w"
    lr_mult: 1
  }
  param {
    name: "bbox_pred_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 84
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels_hard"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets_hard"
  bottom: "bbox_inside_weights_hard"
  bottom: "bbox_outside_weights_hard"
  top: "loss_bbox"
  loss_weight: 1
}
I0727 16:03:22.820626 27947 layer_factory.hpp:77] Creating layer input-data
I0727 16:03:22.832360 27947 net.cpp:106] Creating Layer input-data
I0727 16:03:22.832392 27947 net.cpp:411] input-data -> data
I0727 16:03:22.832409 27947 net.cpp:411] input-data -> im_info
I0727 16:03:22.832419 27947 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0727 16:03:22.887015 27947 net.cpp:150] Setting up input-data
I0727 16:03:22.887045 27947 net.cpp:157] Top shape: 1 3 375 520 (585000)
I0727 16:03:22.887051 27947 net.cpp:157] Top shape: 1 3 (3)
I0727 16:03:22.887058 27947 net.cpp:157] Top shape: 1 4 (4)
I0727 16:03:22.887060 27947 net.cpp:165] Memory required for data: 2340028
I0727 16:03:22.887068 27947 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0727 16:03:22.887079 27947 net.cpp:106] Creating Layer data_input-data_0_split
I0727 16:03:22.887085 27947 net.cpp:454] data_input-data_0_split <- data
I0727 16:03:22.887095 27947 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0727 16:03:22.887102 27947 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0727 16:03:22.887153 27947 net.cpp:150] Setting up data_input-data_0_split
I0727 16:03:22.887161 27947 net.cpp:157] Top shape: 1 3 375 520 (585000)
I0727 16:03:22.887166 27947 net.cpp:157] Top shape: 1 3 375 520 (585000)
I0727 16:03:22.887168 27947 net.cpp:165] Memory required for data: 7020028
I0727 16:03:22.887171 27947 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0727 16:03:22.887176 27947 net.cpp:106] Creating Layer im_info_input-data_1_split
I0727 16:03:22.887179 27947 net.cpp:454] im_info_input-data_1_split <- im_info
I0727 16:03:22.887187 27947 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0727 16:03:22.887192 27947 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0727 16:03:22.887218 27947 net.cpp:150] Setting up im_info_input-data_1_split
I0727 16:03:22.887225 27947 net.cpp:157] Top shape: 1 3 (3)
I0727 16:03:22.887229 27947 net.cpp:157] Top shape: 1 3 (3)
I0727 16:03:22.887233 27947 net.cpp:165] Memory required for data: 7020052
I0727 16:03:22.887235 27947 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0727 16:03:22.887239 27947 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0727 16:03:22.887243 27947 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0727 16:03:22.887246 27947 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0727 16:03:22.887250 27947 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0727 16:03:22.887281 27947 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0727 16:03:22.887285 27947 net.cpp:157] Top shape: 1 4 (4)
I0727 16:03:22.887290 27947 net.cpp:157] Top shape: 1 4 (4)
I0727 16:03:22.887291 27947 net.cpp:165] Memory required for data: 7020084
I0727 16:03:22.887295 27947 layer_factory.hpp:77] Creating layer conv1_1
I0727 16:03:22.887311 27947 net.cpp:106] Creating Layer conv1_1
I0727 16:03:22.887315 27947 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0727 16:03:22.887321 27947 net.cpp:411] conv1_1 -> conv1_1
I0727 16:03:23.337126 27947 net.cpp:150] Setting up conv1_1
I0727 16:03:23.337198 27947 net.cpp:157] Top shape: 1 64 375 520 (12480000)
I0727 16:03:23.337203 27947 net.cpp:165] Memory required for data: 56940084
I0727 16:03:23.337224 27947 layer_factory.hpp:77] Creating layer relu1_1
I0727 16:03:23.337244 27947 net.cpp:106] Creating Layer relu1_1
I0727 16:03:23.337251 27947 net.cpp:454] relu1_1 <- conv1_1
I0727 16:03:23.337270 27947 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0727 16:03:23.338140 27947 net.cpp:150] Setting up relu1_1
I0727 16:03:23.338160 27947 net.cpp:157] Top shape: 1 64 375 520 (12480000)
I0727 16:03:23.338165 27947 net.cpp:165] Memory required for data: 106860084
I0727 16:03:23.338171 27947 layer_factory.hpp:77] Creating layer conv1_2
I0727 16:03:23.338183 27947 net.cpp:106] Creating Layer conv1_2
I0727 16:03:23.338187 27947 net.cpp:454] conv1_2 <- conv1_1
I0727 16:03:23.338194 27947 net.cpp:411] conv1_2 -> conv1_2
I0727 16:03:23.344962 27947 net.cpp:150] Setting up conv1_2
I0727 16:03:23.344987 27947 net.cpp:157] Top shape: 1 64 375 520 (12480000)
I0727 16:03:23.344991 27947 net.cpp:165] Memory required for data: 156780084
I0727 16:03:23.345001 27947 layer_factory.hpp:77] Creating layer relu1_2
I0727 16:03:23.345007 27947 net.cpp:106] Creating Layer relu1_2
I0727 16:03:23.345011 27947 net.cpp:454] relu1_2 <- conv1_2
I0727 16:03:23.345016 27947 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0727 16:03:23.348821 27947 net.cpp:150] Setting up relu1_2
I0727 16:03:23.348839 27947 net.cpp:157] Top shape: 1 64 375 520 (12480000)
I0727 16:03:23.348843 27947 net.cpp:165] Memory required for data: 206700084
I0727 16:03:23.348846 27947 layer_factory.hpp:77] Creating layer pool1
I0727 16:03:23.348858 27947 net.cpp:106] Creating Layer pool1
I0727 16:03:23.348862 27947 net.cpp:454] pool1 <- conv1_2
I0727 16:03:23.348867 27947 net.cpp:411] pool1 -> pool1
I0727 16:03:23.348917 27947 net.cpp:150] Setting up pool1
I0727 16:03:23.348928 27947 net.cpp:157] Top shape: 1 64 188 260 (3128320)
I0727 16:03:23.348932 27947 net.cpp:165] Memory required for data: 219213364
I0727 16:03:23.348935 27947 layer_factory.hpp:77] Creating layer conv2_1
I0727 16:03:23.348942 27947 net.cpp:106] Creating Layer conv2_1
I0727 16:03:23.348945 27947 net.cpp:454] conv2_1 <- pool1
I0727 16:03:23.348950 27947 net.cpp:411] conv2_1 -> conv2_1
I0727 16:03:23.367687 27947 net.cpp:150] Setting up conv2_1
I0727 16:03:23.367714 27947 net.cpp:157] Top shape: 1 128 188 260 (6256640)
I0727 16:03:23.367718 27947 net.cpp:165] Memory required for data: 244239924
I0727 16:03:23.367729 27947 layer_factory.hpp:77] Creating layer relu2_1
I0727 16:03:23.367738 27947 net.cpp:106] Creating Layer relu2_1
I0727 16:03:23.367741 27947 net.cpp:454] relu2_1 <- conv2_1
I0727 16:03:23.367746 27947 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0727 16:03:23.370996 27947 net.cpp:150] Setting up relu2_1
I0727 16:03:23.371014 27947 net.cpp:157] Top shape: 1 128 188 260 (6256640)
I0727 16:03:23.371018 27947 net.cpp:165] Memory required for data: 269266484
I0727 16:03:23.371021 27947 layer_factory.hpp:77] Creating layer conv2_2
I0727 16:03:23.371031 27947 net.cpp:106] Creating Layer conv2_2
I0727 16:03:23.371065 27947 net.cpp:454] conv2_2 <- conv2_1
I0727 16:03:23.371085 27947 net.cpp:411] conv2_2 -> conv2_2
I0727 16:03:23.381204 27947 net.cpp:150] Setting up conv2_2
I0727 16:03:23.381230 27947 net.cpp:157] Top shape: 1 128 188 260 (6256640)
I0727 16:03:23.381234 27947 net.cpp:165] Memory required for data: 294293044
I0727 16:03:23.381242 27947 layer_factory.hpp:77] Creating layer relu2_2
I0727 16:03:23.381275 27947 net.cpp:106] Creating Layer relu2_2
I0727 16:03:23.381292 27947 net.cpp:454] relu2_2 <- conv2_2
I0727 16:03:23.381316 27947 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0727 16:03:23.383198 27947 net.cpp:150] Setting up relu2_2
I0727 16:03:23.383219 27947 net.cpp:157] Top shape: 1 128 188 260 (6256640)
I0727 16:03:23.383224 27947 net.cpp:165] Memory required for data: 319319604
I0727 16:03:23.383227 27947 layer_factory.hpp:77] Creating layer pool2
I0727 16:03:23.383236 27947 net.cpp:106] Creating Layer pool2
I0727 16:03:23.383262 27947 net.cpp:454] pool2 <- conv2_2
I0727 16:03:23.383286 27947 net.cpp:411] pool2 -> pool2
I0727 16:03:23.383368 27947 net.cpp:150] Setting up pool2
I0727 16:03:23.383383 27947 net.cpp:157] Top shape: 1 128 94 130 (1564160)
I0727 16:03:23.383386 27947 net.cpp:165] Memory required for data: 325576244
I0727 16:03:23.383391 27947 layer_factory.hpp:77] Creating layer conv3_1
I0727 16:03:23.383401 27947 net.cpp:106] Creating Layer conv3_1
I0727 16:03:23.383420 27947 net.cpp:454] conv3_1 <- pool2
I0727 16:03:23.383438 27947 net.cpp:411] conv3_1 -> conv3_1
I0727 16:03:23.391461 27947 net.cpp:150] Setting up conv3_1
I0727 16:03:23.391485 27947 net.cpp:157] Top shape: 1 256 94 130 (3128320)
I0727 16:03:23.391490 27947 net.cpp:165] Memory required for data: 338089524
I0727 16:03:23.391502 27947 layer_factory.hpp:77] Creating layer relu3_1
I0727 16:03:23.391532 27947 net.cpp:106] Creating Layer relu3_1
I0727 16:03:23.391551 27947 net.cpp:454] relu3_1 <- conv3_1
I0727 16:03:23.391558 27947 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0727 16:03:23.392081 27947 net.cpp:150] Setting up relu3_1
I0727 16:03:23.392097 27947 net.cpp:157] Top shape: 1 256 94 130 (3128320)
I0727 16:03:23.392101 27947 net.cpp:165] Memory required for data: 350602804
I0727 16:03:23.392104 27947 layer_factory.hpp:77] Creating layer conv3_2
I0727 16:03:23.392117 27947 net.cpp:106] Creating Layer conv3_2
I0727 16:03:23.392139 27947 net.cpp:454] conv3_2 <- conv3_1
I0727 16:03:23.392163 27947 net.cpp:411] conv3_2 -> conv3_2
I0727 16:03:23.397960 27947 net.cpp:150] Setting up conv3_2
I0727 16:03:23.397985 27947 net.cpp:157] Top shape: 1 256 94 130 (3128320)
I0727 16:03:23.397989 27947 net.cpp:165] Memory required for data: 363116084
I0727 16:03:23.397996 27947 layer_factory.hpp:77] Creating layer relu3_2
I0727 16:03:23.398026 27947 net.cpp:106] Creating Layer relu3_2
I0727 16:03:23.398042 27947 net.cpp:454] relu3_2 <- conv3_2
I0727 16:03:23.398048 27947 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0727 16:03:23.398373 27947 net.cpp:150] Setting up relu3_2
I0727 16:03:23.398389 27947 net.cpp:157] Top shape: 1 256 94 130 (3128320)
I0727 16:03:23.398392 27947 net.cpp:165] Memory required for data: 375629364
I0727 16:03:23.398397 27947 layer_factory.hpp:77] Creating layer conv3_3
I0727 16:03:23.398407 27947 net.cpp:106] Creating Layer conv3_3
I0727 16:03:23.398430 27947 net.cpp:454] conv3_3 <- conv3_2
I0727 16:03:23.398440 27947 net.cpp:411] conv3_3 -> conv3_3
I0727 16:03:23.404026 27947 net.cpp:150] Setting up conv3_3
I0727 16:03:23.404052 27947 net.cpp:157] Top shape: 1 256 94 130 (3128320)
I0727 16:03:23.404057 27947 net.cpp:165] Memory required for data: 388142644
I0727 16:03:23.404064 27947 layer_factory.hpp:77] Creating layer relu3_3
I0727 16:03:23.404072 27947 net.cpp:106] Creating Layer relu3_3
I0727 16:03:23.404099 27947 net.cpp:454] relu3_3 <- conv3_3
I0727 16:03:23.404130 27947 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0727 16:03:23.405030 27947 net.cpp:150] Setting up relu3_3
I0727 16:03:23.405062 27947 net.cpp:157] Top shape: 1 256 94 130 (3128320)
I0727 16:03:23.405066 27947 net.cpp:165] Memory required for data: 400655924
I0727 16:03:23.405071 27947 layer_factory.hpp:77] Creating layer pool3
I0727 16:03:23.405081 27947 net.cpp:106] Creating Layer pool3
I0727 16:03:23.405084 27947 net.cpp:454] pool3 <- conv3_3
I0727 16:03:23.405089 27947 net.cpp:411] pool3 -> pool3
I0727 16:03:23.405170 27947 net.cpp:150] Setting up pool3
I0727 16:03:23.405185 27947 net.cpp:157] Top shape: 1 256 47 65 (782080)
I0727 16:03:23.405189 27947 net.cpp:165] Memory required for data: 403784244
I0727 16:03:23.405192 27947 layer_factory.hpp:77] Creating layer conv4_1
I0727 16:03:23.405201 27947 net.cpp:106] Creating Layer conv4_1
I0727 16:03:23.405206 27947 net.cpp:454] conv4_1 <- pool3
I0727 16:03:23.405211 27947 net.cpp:411] conv4_1 -> conv4_1
I0727 16:03:23.412281 27947 net.cpp:150] Setting up conv4_1
I0727 16:03:23.412308 27947 net.cpp:157] Top shape: 1 512 47 65 (1564160)
I0727 16:03:23.412313 27947 net.cpp:165] Memory required for data: 410040884
I0727 16:03:23.412322 27947 layer_factory.hpp:77] Creating layer relu4_1
I0727 16:03:23.412361 27947 net.cpp:106] Creating Layer relu4_1
I0727 16:03:23.412374 27947 net.cpp:454] relu4_1 <- conv4_1
I0727 16:03:23.412380 27947 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0727 16:03:23.413389 27947 net.cpp:150] Setting up relu4_1
I0727 16:03:23.413410 27947 net.cpp:157] Top shape: 1 512 47 65 (1564160)
I0727 16:03:23.413414 27947 net.cpp:165] Memory required for data: 416297524
I0727 16:03:23.413419 27947 layer_factory.hpp:77] Creating layer conv4_2
I0727 16:03:23.413431 27947 net.cpp:106] Creating Layer conv4_2
I0727 16:03:23.413462 27947 net.cpp:454] conv4_2 <- conv4_1
I0727 16:03:23.413481 27947 net.cpp:411] conv4_2 -> conv4_2
I0727 16:03:23.424088 27947 net.cpp:150] Setting up conv4_2
I0727 16:03:23.424115 27947 net.cpp:157] Top shape: 1 512 47 65 (1564160)
I0727 16:03:23.424119 27947 net.cpp:165] Memory required for data: 422554164
I0727 16:03:23.424132 27947 layer_factory.hpp:77] Creating layer relu4_2
I0727 16:03:23.424166 27947 net.cpp:106] Creating Layer relu4_2
I0727 16:03:23.424185 27947 net.cpp:454] relu4_2 <- conv4_2
I0727 16:03:23.424201 27947 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0727 16:03:23.426744 27947 net.cpp:150] Setting up relu4_2
I0727 16:03:23.426764 27947 net.cpp:157] Top shape: 1 512 47 65 (1564160)
I0727 16:03:23.426769 27947 net.cpp:165] Memory required for data: 428810804
I0727 16:03:23.426772 27947 layer_factory.hpp:77] Creating layer conv4_3
I0727 16:03:23.426784 27947 net.cpp:106] Creating Layer conv4_3
I0727 16:03:23.426807 27947 net.cpp:454] conv4_3 <- conv4_2
I0727 16:03:23.426827 27947 net.cpp:411] conv4_3 -> conv4_3
I0727 16:03:23.438657 27947 net.cpp:150] Setting up conv4_3
I0727 16:03:23.438688 27947 net.cpp:157] Top shape: 1 512 47 65 (1564160)
I0727 16:03:23.438693 27947 net.cpp:165] Memory required for data: 435067444
I0727 16:03:23.438701 27947 layer_factory.hpp:77] Creating layer relu4_3
I0727 16:03:23.438730 27947 net.cpp:106] Creating Layer relu4_3
I0727 16:03:23.438750 27947 net.cpp:454] relu4_3 <- conv4_3
I0727 16:03:23.438768 27947 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0727 16:03:23.442049 27947 net.cpp:150] Setting up relu4_3
I0727 16:03:23.442070 27947 net.cpp:157] Top shape: 1 512 47 65 (1564160)
I0727 16:03:23.442075 27947 net.cpp:165] Memory required for data: 441324084
I0727 16:03:23.442078 27947 layer_factory.hpp:77] Creating layer pool4
I0727 16:03:23.442088 27947 net.cpp:106] Creating Layer pool4
I0727 16:03:23.442112 27947 net.cpp:454] pool4 <- conv4_3
I0727 16:03:23.442131 27947 net.cpp:411] pool4 -> pool4
I0727 16:03:23.442193 27947 net.cpp:150] Setting up pool4
I0727 16:03:23.442205 27947 net.cpp:157] Top shape: 1 512 24 33 (405504)
I0727 16:03:23.442209 27947 net.cpp:165] Memory required for data: 442946100
I0727 16:03:23.442211 27947 layer_factory.hpp:77] Creating layer conv5_1
I0727 16:03:23.442220 27947 net.cpp:106] Creating Layer conv5_1
I0727 16:03:23.442239 27947 net.cpp:454] conv5_1 <- pool4
I0727 16:03:23.442268 27947 net.cpp:411] conv5_1 -> conv5_1
I0727 16:03:23.452596 27947 net.cpp:150] Setting up conv5_1
I0727 16:03:23.452625 27947 net.cpp:157] Top shape: 1 512 24 33 (405504)
I0727 16:03:23.452630 27947 net.cpp:165] Memory required for data: 444568116
I0727 16:03:23.452636 27947 layer_factory.hpp:77] Creating layer relu5_1
I0727 16:03:23.452643 27947 net.cpp:106] Creating Layer relu5_1
I0727 16:03:23.452647 27947 net.cpp:454] relu5_1 <- conv5_1
I0727 16:03:23.452652 27947 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0727 16:03:23.455731 27947 net.cpp:150] Setting up relu5_1
I0727 16:03:23.455749 27947 net.cpp:157] Top shape: 1 512 24 33 (405504)
I0727 16:03:23.455752 27947 net.cpp:165] Memory required for data: 446190132
I0727 16:03:23.455757 27947 layer_factory.hpp:77] Creating layer conv5_2
I0727 16:03:23.455767 27947 net.cpp:106] Creating Layer conv5_2
I0727 16:03:23.455796 27947 net.cpp:454] conv5_2 <- conv5_1
I0727 16:03:23.455816 27947 net.cpp:411] conv5_2 -> conv5_2
I0727 16:03:23.466426 27947 net.cpp:150] Setting up conv5_2
I0727 16:03:23.466450 27947 net.cpp:157] Top shape: 1 512 24 33 (405504)
I0727 16:03:23.466454 27947 net.cpp:165] Memory required for data: 447812148
I0727 16:03:23.466461 27947 layer_factory.hpp:77] Creating layer relu5_2
I0727 16:03:23.466490 27947 net.cpp:106] Creating Layer relu5_2
I0727 16:03:23.466509 27947 net.cpp:454] relu5_2 <- conv5_2
I0727 16:03:23.466529 27947 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0727 16:03:23.468554 27947 net.cpp:150] Setting up relu5_2
I0727 16:03:23.468571 27947 net.cpp:157] Top shape: 1 512 24 33 (405504)
I0727 16:03:23.468575 27947 net.cpp:165] Memory required for data: 449434164
I0727 16:03:23.468578 27947 layer_factory.hpp:77] Creating layer conv5_3
I0727 16:03:23.468593 27947 net.cpp:106] Creating Layer conv5_3
I0727 16:03:23.468616 27947 net.cpp:454] conv5_3 <- conv5_2
I0727 16:03:23.468647 27947 net.cpp:411] conv5_3 -> conv5_3
I0727 16:03:23.480316 27947 net.cpp:150] Setting up conv5_3
I0727 16:03:23.480341 27947 net.cpp:157] Top shape: 1 512 24 33 (405504)
I0727 16:03:23.480345 27947 net.cpp:165] Memory required for data: 451056180
I0727 16:03:23.480352 27947 layer_factory.hpp:77] Creating layer relu5_3
I0727 16:03:23.480383 27947 net.cpp:106] Creating Layer relu5_3
I0727 16:03:23.480401 27947 net.cpp:454] relu5_3 <- conv5_3
I0727 16:03:23.480429 27947 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0727 16:03:23.481654 27947 net.cpp:150] Setting up relu5_3
I0727 16:03:23.481676 27947 net.cpp:157] Top shape: 1 512 24 33 (405504)
I0727 16:03:23.481680 27947 net.cpp:165] Memory required for data: 452678196
I0727 16:03:23.481685 27947 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0727 16:03:23.481714 27947 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0727 16:03:23.481732 27947 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0727 16:03:23.481758 27947 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0727 16:03:23.481777 27947 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0727 16:03:23.481782 27947 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_2
I0727 16:03:23.481854 27947 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0727 16:03:23.481869 27947 net.cpp:157] Top shape: 1 512 24 33 (405504)
I0727 16:03:23.481873 27947 net.cpp:157] Top shape: 1 512 24 33 (405504)
I0727 16:03:23.481876 27947 net.cpp:157] Top shape: 1 512 24 33 (405504)
I0727 16:03:23.481879 27947 net.cpp:165] Memory required for data: 457544244
I0727 16:03:23.481899 27947 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0727 16:03:23.481932 27947 net.cpp:106] Creating Layer rpn_conv/3x3
I0727 16:03:23.481945 27947 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0727 16:03:23.481953 27947 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0727 16:03:23.544302 27947 net.cpp:150] Setting up rpn_conv/3x3
I0727 16:03:23.544338 27947 net.cpp:157] Top shape: 1 512 24 33 (405504)
I0727 16:03:23.544342 27947 net.cpp:165] Memory required for data: 459166260
I0727 16:03:23.544351 27947 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0727 16:03:23.544361 27947 net.cpp:106] Creating Layer rpn_relu/3x3
I0727 16:03:23.544391 27947 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0727 16:03:23.544435 27947 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0727 16:03:23.544651 27947 net.cpp:150] Setting up rpn_relu/3x3
I0727 16:03:23.544667 27947 net.cpp:157] Top shape: 1 512 24 33 (405504)
I0727 16:03:23.544670 27947 net.cpp:165] Memory required for data: 460788276
I0727 16:03:23.544675 27947 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0727 16:03:23.544683 27947 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0727 16:03:23.544705 27947 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0727 16:03:23.544730 27947 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0727 16:03:23.544754 27947 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0727 16:03:23.544831 27947 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0727 16:03:23.544847 27947 net.cpp:157] Top shape: 1 512 24 33 (405504)
I0727 16:03:23.544850 27947 net.cpp:157] Top shape: 1 512 24 33 (405504)
I0727 16:03:23.544853 27947 net.cpp:165] Memory required for data: 464032308
I0727 16:03:23.544857 27947 layer_factory.hpp:77] Creating layer rpn_cls_score
I0727 16:03:23.544868 27947 net.cpp:106] Creating Layer rpn_cls_score
I0727 16:03:23.544888 27947 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0727 16:03:23.544909 27947 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0727 16:03:23.548352 27947 net.cpp:150] Setting up rpn_cls_score
I0727 16:03:23.548377 27947 net.cpp:157] Top shape: 1 36 24 33 (28512)
I0727 16:03:23.548382 27947 net.cpp:165] Memory required for data: 464146356
I0727 16:03:23.548388 27947 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0727 16:03:23.548418 27947 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0727 16:03:23.548441 27947 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0727 16:03:23.548460 27947 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0727 16:03:23.548470 27947 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0727 16:03:23.548529 27947 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0727 16:03:23.548543 27947 net.cpp:157] Top shape: 1 36 24 33 (28512)
I0727 16:03:23.548547 27947 net.cpp:157] Top shape: 1 36 24 33 (28512)
I0727 16:03:23.548550 27947 net.cpp:165] Memory required for data: 464374452
I0727 16:03:23.548553 27947 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0727 16:03:23.548581 27947 net.cpp:106] Creating Layer rpn_bbox_pred
I0727 16:03:23.548604 27947 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0727 16:03:23.548614 27947 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0727 16:03:23.551756 27947 net.cpp:150] Setting up rpn_bbox_pred
I0727 16:03:23.551780 27947 net.cpp:157] Top shape: 1 72 24 33 (57024)
I0727 16:03:23.551784 27947 net.cpp:165] Memory required for data: 464602548
I0727 16:03:23.551792 27947 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0727 16:03:23.551822 27947 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0727 16:03:23.551839 27947 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0727 16:03:23.551848 27947 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0727 16:03:23.551872 27947 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0727 16:03:23.551933 27947 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0727 16:03:23.551945 27947 net.cpp:157] Top shape: 1 72 24 33 (57024)
I0727 16:03:23.551949 27947 net.cpp:157] Top shape: 1 72 24 33 (57024)
I0727 16:03:23.551952 27947 net.cpp:165] Memory required for data: 465058740
I0727 16:03:23.551955 27947 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0727 16:03:23.551985 27947 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0727 16:03:23.552000 27947 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0727 16:03:23.552007 27947 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0727 16:03:23.552053 27947 net.cpp:150] Setting up rpn_cls_score_reshape
I0727 16:03:23.552065 27947 net.cpp:157] Top shape: 1 2 432 33 (28512)
I0727 16:03:23.552068 27947 net.cpp:165] Memory required for data: 465172788
I0727 16:03:23.552072 27947 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0727 16:03:23.552076 27947 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0727 16:03:23.552096 27947 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0727 16:03:23.552125 27947 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0727 16:03:23.552139 27947 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0727 16:03:23.552192 27947 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0727 16:03:23.552204 27947 net.cpp:157] Top shape: 1 2 432 33 (28512)
I0727 16:03:23.552208 27947 net.cpp:157] Top shape: 1 2 432 33 (28512)
I0727 16:03:23.552211 27947 net.cpp:165] Memory required for data: 465400884
I0727 16:03:23.552214 27947 layer_factory.hpp:77] Creating layer rpn-data
I0727 16:03:23.553412 27947 net.cpp:106] Creating Layer rpn-data
I0727 16:03:23.553436 27947 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0727 16:03:23.553442 27947 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0727 16:03:23.553447 27947 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0727 16:03:23.553475 27947 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0727 16:03:23.553488 27947 net.cpp:411] rpn-data -> rpn_labels
I0727 16:03:23.553498 27947 net.cpp:411] rpn-data -> rpn_bbox_targets
I0727 16:03:23.553520 27947 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0727 16:03:23.553532 27947 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0727 16:03:23.554867 27947 net.cpp:150] Setting up rpn-data
I0727 16:03:23.554893 27947 net.cpp:157] Top shape: 1 1 432 33 (14256)
I0727 16:03:23.554898 27947 net.cpp:157] Top shape: 1 72 24 33 (57024)
I0727 16:03:23.554925 27947 net.cpp:157] Top shape: 1 72 24 33 (57024)
I0727 16:03:23.554937 27947 net.cpp:157] Top shape: 1 72 24 33 (57024)
I0727 16:03:23.554940 27947 net.cpp:165] Memory required for data: 466142196
I0727 16:03:23.554945 27947 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0727 16:03:23.554957 27947 net.cpp:106] Creating Layer rpn_loss_cls
I0727 16:03:23.554975 27947 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0727 16:03:23.554991 27947 net.cpp:454] rpn_loss_cls <- rpn_labels
I0727 16:03:23.554996 27947 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0727 16:03:23.555012 27947 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0727 16:03:23.555423 27947 net.cpp:150] Setting up rpn_loss_cls
I0727 16:03:23.555444 27947 net.cpp:157] Top shape: (1)
I0727 16:03:23.555449 27947 net.cpp:160]     with loss weight 1
I0727 16:03:23.555490 27947 net.cpp:165] Memory required for data: 466142200
I0727 16:03:23.555497 27947 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0727 16:03:23.555510 27947 net.cpp:106] Creating Layer rpn_loss_bbox
I0727 16:03:23.555527 27947 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0727 16:03:23.555546 27947 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0727 16:03:23.555549 27947 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0727 16:03:23.555553 27947 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0727 16:03:23.555558 27947 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0727 16:03:23.556684 27947 net.cpp:150] Setting up rpn_loss_bbox
I0727 16:03:23.556705 27947 net.cpp:157] Top shape: (1)
I0727 16:03:23.556710 27947 net.cpp:160]     with loss weight 1
I0727 16:03:23.556735 27947 net.cpp:165] Memory required for data: 466142204
I0727 16:03:23.556751 27947 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0727 16:03:23.556756 27947 net.cpp:106] Creating Layer rpn_cls_prob
I0727 16:03:23.556761 27947 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0727 16:03:23.556768 27947 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0727 16:03:23.557747 27947 net.cpp:150] Setting up rpn_cls_prob
I0727 16:03:23.557770 27947 net.cpp:157] Top shape: 1 2 432 33 (28512)
I0727 16:03:23.557775 27947 net.cpp:165] Memory required for data: 466256252
I0727 16:03:23.557777 27947 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0727 16:03:23.557808 27947 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0727 16:03:23.557821 27947 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0727 16:03:23.557828 27947 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0727 16:03:23.557888 27947 net.cpp:150] Setting up rpn_cls_prob_reshape
I0727 16:03:23.557902 27947 net.cpp:157] Top shape: 1 36 24 33 (28512)
I0727 16:03:23.557905 27947 net.cpp:165] Memory required for data: 466370300
I0727 16:03:23.557910 27947 layer_factory.hpp:77] Creating layer proposal
I0727 16:03:23.562214 27947 net.cpp:106] Creating Layer proposal
I0727 16:03:23.562237 27947 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0727 16:03:23.562244 27947 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0727 16:03:23.562249 27947 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0727 16:03:23.562279 27947 net.cpp:411] proposal -> rpn_rois
I0727 16:03:23.562927 27947 net.cpp:150] Setting up proposal
I0727 16:03:23.562950 27947 net.cpp:157] Top shape: 1 5 (5)
I0727 16:03:23.562954 27947 net.cpp:165] Memory required for data: 466370320
I0727 16:03:23.562958 27947 layer_factory.hpp:77] Creating layer roi-data
I0727 16:03:23.563206 27947 net.cpp:106] Creating Layer roi-data
I0727 16:03:23.563226 27947 net.cpp:454] roi-data <- rpn_rois
I0727 16:03:23.563233 27947 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0727 16:03:23.563240 27947 net.cpp:411] roi-data -> rois
I0727 16:03:23.563269 27947 net.cpp:411] roi-data -> labels
I0727 16:03:23.563284 27947 net.cpp:411] roi-data -> bbox_targets
I0727 16:03:23.563289 27947 net.cpp:411] roi-data -> bbox_inside_weights
I0727 16:03:23.563294 27947 net.cpp:411] roi-data -> bbox_outside_weights
I0727 16:03:23.563690 27947 net.cpp:150] Setting up roi-data
I0727 16:03:23.563712 27947 net.cpp:157] Top shape: 1 5 (5)
I0727 16:03:23.563716 27947 net.cpp:157] Top shape: 1 1 (1)
I0727 16:03:23.563720 27947 net.cpp:157] Top shape: 1 84 (84)
I0727 16:03:23.563724 27947 net.cpp:157] Top shape: 1 84 (84)
I0727 16:03:23.563747 27947 net.cpp:157] Top shape: 1 84 (84)
I0727 16:03:23.563752 27947 net.cpp:165] Memory required for data: 466371352
I0727 16:03:23.563756 27947 layer_factory.hpp:77] Creating layer rois_roi-data_0_split
I0727 16:03:23.563762 27947 net.cpp:106] Creating Layer rois_roi-data_0_split
I0727 16:03:23.563778 27947 net.cpp:454] rois_roi-data_0_split <- rois
I0727 16:03:23.563786 27947 net.cpp:411] rois_roi-data_0_split -> rois_roi-data_0_split_0
I0727 16:03:23.563793 27947 net.cpp:411] rois_roi-data_0_split -> rois_roi-data_0_split_1
I0727 16:03:23.563859 27947 net.cpp:150] Setting up rois_roi-data_0_split
I0727 16:03:23.563874 27947 net.cpp:157] Top shape: 1 5 (5)
I0727 16:03:23.563879 27947 net.cpp:157] Top shape: 1 5 (5)
I0727 16:03:23.563881 27947 net.cpp:165] Memory required for data: 466371392
I0727 16:03:23.563884 27947 layer_factory.hpp:77] Creating layer roi_pool5_readonly
I0727 16:03:23.563894 27947 net.cpp:106] Creating Layer roi_pool5_readonly
I0727 16:03:23.563915 27947 net.cpp:454] roi_pool5_readonly <- conv5_3_relu5_3_0_split_1
I0727 16:03:23.563922 27947 net.cpp:454] roi_pool5_readonly <- rois_roi-data_0_split_0
I0727 16:03:23.563927 27947 net.cpp:411] roi_pool5_readonly -> pool5_readonly
I0727 16:03:23.563937 27947 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0727 16:03:23.563998 27947 net.cpp:150] Setting up roi_pool5_readonly
I0727 16:03:23.564012 27947 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0727 16:03:23.564014 27947 net.cpp:165] Memory required for data: 466471744
I0727 16:03:23.564019 27947 layer_factory.hpp:77] Creating layer fc6_readonly
I0727 16:03:23.564031 27947 net.cpp:106] Creating Layer fc6_readonly
I0727 16:03:23.564035 27947 net.cpp:454] fc6_readonly <- pool5_readonly
I0727 16:03:23.564040 27947 net.cpp:411] fc6_readonly -> fc6_readonly
I0727 16:03:23.878430 27947 net.cpp:150] Setting up fc6_readonly
I0727 16:03:23.878494 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:23.878499 27947 net.cpp:165] Memory required for data: 466488128
I0727 16:03:23.878523 27947 layer_factory.hpp:77] Creating layer relu6_readonly
I0727 16:03:23.878537 27947 net.cpp:106] Creating Layer relu6_readonly
I0727 16:03:23.878543 27947 net.cpp:454] relu6_readonly <- fc6_readonly
I0727 16:03:23.878551 27947 net.cpp:397] relu6_readonly -> fc6_readonly (in-place)
I0727 16:03:23.878826 27947 net.cpp:150] Setting up relu6_readonly
I0727 16:03:23.878844 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:23.878849 27947 net.cpp:165] Memory required for data: 466504512
I0727 16:03:23.878851 27947 layer_factory.hpp:77] Creating layer drop6_readonly
I0727 16:03:23.878876 27947 net.cpp:106] Creating Layer drop6_readonly
I0727 16:03:23.878880 27947 net.cpp:454] drop6_readonly <- fc6_readonly
I0727 16:03:23.878885 27947 net.cpp:397] drop6_readonly -> fc6_readonly (in-place)
I0727 16:03:23.878968 27947 net.cpp:150] Setting up drop6_readonly
I0727 16:03:23.878983 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:23.878985 27947 net.cpp:165] Memory required for data: 466520896
I0727 16:03:23.878988 27947 layer_factory.hpp:77] Creating layer fc7_readonly
I0727 16:03:23.879004 27947 net.cpp:106] Creating Layer fc7_readonly
I0727 16:03:23.879006 27947 net.cpp:454] fc7_readonly <- fc6_readonly
I0727 16:03:23.879014 27947 net.cpp:411] fc7_readonly -> fc7_readonly
I0727 16:03:23.931504 27947 net.cpp:150] Setting up fc7_readonly
I0727 16:03:23.931566 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:23.931571 27947 net.cpp:165] Memory required for data: 466537280
I0727 16:03:23.931582 27947 layer_factory.hpp:77] Creating layer relu7_readonly
I0727 16:03:23.931596 27947 net.cpp:106] Creating Layer relu7_readonly
I0727 16:03:23.931602 27947 net.cpp:454] relu7_readonly <- fc7_readonly
I0727 16:03:23.931612 27947 net.cpp:397] relu7_readonly -> fc7_readonly (in-place)
I0727 16:03:23.932677 27947 net.cpp:150] Setting up relu7_readonly
I0727 16:03:23.932698 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:23.932701 27947 net.cpp:165] Memory required for data: 466553664
I0727 16:03:23.932705 27947 layer_factory.hpp:77] Creating layer drop7_readonly
I0727 16:03:23.932713 27947 net.cpp:106] Creating Layer drop7_readonly
I0727 16:03:23.932716 27947 net.cpp:454] drop7_readonly <- fc7_readonly
I0727 16:03:23.932723 27947 net.cpp:397] drop7_readonly -> fc7_readonly (in-place)
I0727 16:03:23.932761 27947 net.cpp:150] Setting up drop7_readonly
I0727 16:03:23.932767 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:23.932770 27947 net.cpp:165] Memory required for data: 466570048
I0727 16:03:23.932773 27947 layer_factory.hpp:77] Creating layer fc7_readonly_drop7_readonly_0_split
I0727 16:03:23.932781 27947 net.cpp:106] Creating Layer fc7_readonly_drop7_readonly_0_split
I0727 16:03:23.932785 27947 net.cpp:454] fc7_readonly_drop7_readonly_0_split <- fc7_readonly
I0727 16:03:23.932788 27947 net.cpp:411] fc7_readonly_drop7_readonly_0_split -> fc7_readonly_drop7_readonly_0_split_0
I0727 16:03:23.932795 27947 net.cpp:411] fc7_readonly_drop7_readonly_0_split -> fc7_readonly_drop7_readonly_0_split_1
I0727 16:03:23.932842 27947 net.cpp:150] Setting up fc7_readonly_drop7_readonly_0_split
I0727 16:03:23.932847 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:23.932852 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:23.932853 27947 net.cpp:165] Memory required for data: 466602816
I0727 16:03:23.932857 27947 layer_factory.hpp:77] Creating layer cls_score_readonly
I0727 16:03:23.932870 27947 net.cpp:106] Creating Layer cls_score_readonly
I0727 16:03:23.932874 27947 net.cpp:454] cls_score_readonly <- fc7_readonly_drop7_readonly_0_split_0
I0727 16:03:23.932879 27947 net.cpp:411] cls_score_readonly -> cls_score_readonly
I0727 16:03:23.935803 27947 net.cpp:150] Setting up cls_score_readonly
I0727 16:03:23.935825 27947 net.cpp:157] Top shape: 1 21 (21)
I0727 16:03:23.935829 27947 net.cpp:165] Memory required for data: 466602900
I0727 16:03:23.935837 27947 layer_factory.hpp:77] Creating layer bbox_pred_readonly
I0727 16:03:23.935845 27947 net.cpp:106] Creating Layer bbox_pred_readonly
I0727 16:03:23.935849 27947 net.cpp:454] bbox_pred_readonly <- fc7_readonly_drop7_readonly_0_split_1
I0727 16:03:23.935854 27947 net.cpp:411] bbox_pred_readonly -> bbox_pred_readonly
I0727 16:03:23.944897 27947 net.cpp:150] Setting up bbox_pred_readonly
I0727 16:03:23.944919 27947 net.cpp:157] Top shape: 1 84 (84)
I0727 16:03:23.944922 27947 net.cpp:165] Memory required for data: 466603236
I0727 16:03:23.944928 27947 layer_factory.hpp:77] Creating layer cls_prob_readonly
I0727 16:03:23.944936 27947 net.cpp:106] Creating Layer cls_prob_readonly
I0727 16:03:23.944939 27947 net.cpp:454] cls_prob_readonly <- cls_score_readonly
I0727 16:03:23.944947 27947 net.cpp:411] cls_prob_readonly -> cls_prob_readonly
I0727 16:03:23.945225 27947 net.cpp:150] Setting up cls_prob_readonly
I0727 16:03:23.945247 27947 net.cpp:157] Top shape: 1 21 (21)
I0727 16:03:23.945250 27947 net.cpp:165] Memory required for data: 466603320
I0727 16:03:23.945255 27947 layer_factory.hpp:77] Creating layer hard_roi_mining
I0727 16:03:23.945317 27947 net.cpp:106] Creating Layer hard_roi_mining
I0727 16:03:23.945324 27947 net.cpp:454] hard_roi_mining <- cls_prob_readonly
I0727 16:03:23.945329 27947 net.cpp:454] hard_roi_mining <- bbox_pred_readonly
I0727 16:03:23.945333 27947 net.cpp:454] hard_roi_mining <- rois_roi-data_0_split_1
I0727 16:03:23.945338 27947 net.cpp:454] hard_roi_mining <- labels
I0727 16:03:23.945341 27947 net.cpp:454] hard_roi_mining <- bbox_targets
I0727 16:03:23.945344 27947 net.cpp:454] hard_roi_mining <- bbox_inside_weights
I0727 16:03:23.945348 27947 net.cpp:454] hard_roi_mining <- bbox_outside_weights
I0727 16:03:23.945355 27947 net.cpp:411] hard_roi_mining -> rois_hard
I0727 16:03:23.945363 27947 net.cpp:411] hard_roi_mining -> labels_hard
I0727 16:03:23.945369 27947 net.cpp:411] hard_roi_mining -> bbox_targets_hard
I0727 16:03:23.945375 27947 net.cpp:411] hard_roi_mining -> bbox_inside_weights_hard
I0727 16:03:23.945380 27947 net.cpp:411] hard_roi_mining -> bbox_outside_weights_hard
OHEMDataLayer: name_to_top: {'bbox_outside_weights_hard': 4, 'bbox_inside_weights_hard': 3, 'labels_hard': 1, 'rois_hard': 0, 'bbox_targets_hard': 2}
I0727 16:03:23.946025 27947 net.cpp:150] Setting up hard_roi_mining
I0727 16:03:23.946036 27947 net.cpp:157] Top shape: 1 5 (5)
I0727 16:03:23.946039 27947 net.cpp:157] Top shape: 1 (1)
I0727 16:03:23.946043 27947 net.cpp:157] Top shape: 1 84 (84)
I0727 16:03:23.946046 27947 net.cpp:157] Top shape: 1 84 (84)
I0727 16:03:23.946049 27947 net.cpp:157] Top shape: 1 84 (84)
I0727 16:03:23.946053 27947 net.cpp:165] Memory required for data: 466604352
I0727 16:03:23.946055 27947 layer_factory.hpp:77] Creating layer roi_pool5
I0727 16:03:23.946074 27947 net.cpp:106] Creating Layer roi_pool5
I0727 16:03:23.946077 27947 net.cpp:454] roi_pool5 <- conv5_3_relu5_3_0_split_2
I0727 16:03:23.946082 27947 net.cpp:454] roi_pool5 <- rois_hard
I0727 16:03:23.946087 27947 net.cpp:411] roi_pool5 -> pool5
I0727 16:03:23.946095 27947 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0727 16:03:23.946152 27947 net.cpp:150] Setting up roi_pool5
I0727 16:03:23.946158 27947 net.cpp:157] Top shape: 1 512 7 7 (25088)
I0727 16:03:23.946161 27947 net.cpp:165] Memory required for data: 466704704
I0727 16:03:23.946164 27947 layer_factory.hpp:77] Creating layer fc6
I0727 16:03:23.946173 27947 net.cpp:106] Creating Layer fc6
I0727 16:03:23.946177 27947 net.cpp:454] fc6 <- pool5
I0727 16:03:23.946182 27947 net.cpp:411] fc6 -> fc6
I0727 16:03:24.232975 27947 net.cpp:150] Setting up fc6
I0727 16:03:24.233048 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:24.233053 27947 net.cpp:165] Memory required for data: 466721088
I0727 16:03:24.233062 27947 net.cpp:514] Sharing parameters 'fc6_w' owned by layer 'fc6_readonly', param index 0
I0727 16:03:24.233067 27947 net.cpp:514] Sharing parameters 'fc6_b' owned by layer 'fc6_readonly', param index 1
I0727 16:03:24.233072 27947 layer_factory.hpp:77] Creating layer relu6
I0727 16:03:24.233088 27947 net.cpp:106] Creating Layer relu6
I0727 16:03:24.233094 27947 net.cpp:454] relu6 <- fc6
I0727 16:03:24.233103 27947 net.cpp:397] relu6 -> fc6 (in-place)
I0727 16:03:24.234144 27947 net.cpp:150] Setting up relu6
I0727 16:03:24.234169 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:24.234172 27947 net.cpp:165] Memory required for data: 466737472
I0727 16:03:24.234176 27947 layer_factory.hpp:77] Creating layer drop6
I0727 16:03:24.234184 27947 net.cpp:106] Creating Layer drop6
I0727 16:03:24.234216 27947 net.cpp:454] drop6 <- fc6
I0727 16:03:24.234236 27947 net.cpp:397] drop6 -> fc6 (in-place)
I0727 16:03:24.234308 27947 net.cpp:150] Setting up drop6
I0727 16:03:24.234323 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:24.234325 27947 net.cpp:165] Memory required for data: 466753856
I0727 16:03:24.234328 27947 layer_factory.hpp:77] Creating layer fc7
I0727 16:03:24.234338 27947 net.cpp:106] Creating Layer fc7
I0727 16:03:24.234357 27947 net.cpp:454] fc7 <- fc6
I0727 16:03:24.234374 27947 net.cpp:411] fc7 -> fc7
I0727 16:03:24.281304 27947 net.cpp:150] Setting up fc7
I0727 16:03:24.281368 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:24.281373 27947 net.cpp:165] Memory required for data: 466770240
I0727 16:03:24.281380 27947 net.cpp:514] Sharing parameters 'fc7_w' owned by layer 'fc7_readonly', param index 0
I0727 16:03:24.281388 27947 net.cpp:514] Sharing parameters 'fc7_b' owned by layer 'fc7_readonly', param index 1
I0727 16:03:24.281391 27947 layer_factory.hpp:77] Creating layer relu7
I0727 16:03:24.281402 27947 net.cpp:106] Creating Layer relu7
I0727 16:03:24.281446 27947 net.cpp:454] relu7 <- fc7
I0727 16:03:24.281467 27947 net.cpp:397] relu7 -> fc7 (in-place)
I0727 16:03:24.281749 27947 net.cpp:150] Setting up relu7
I0727 16:03:24.281766 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:24.281770 27947 net.cpp:165] Memory required for data: 466786624
I0727 16:03:24.281774 27947 layer_factory.hpp:77] Creating layer drop7
I0727 16:03:24.281786 27947 net.cpp:106] Creating Layer drop7
I0727 16:03:24.281806 27947 net.cpp:454] drop7 <- fc7
I0727 16:03:24.281832 27947 net.cpp:397] drop7 -> fc7 (in-place)
I0727 16:03:24.281898 27947 net.cpp:150] Setting up drop7
I0727 16:03:24.281913 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:24.281915 27947 net.cpp:165] Memory required for data: 466803008
I0727 16:03:24.281919 27947 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0727 16:03:24.281924 27947 net.cpp:106] Creating Layer fc7_drop7_0_split
I0727 16:03:24.281942 27947 net.cpp:454] fc7_drop7_0_split <- fc7
I0727 16:03:24.281960 27947 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0727 16:03:24.281980 27947 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0727 16:03:24.282060 27947 net.cpp:150] Setting up fc7_drop7_0_split
I0727 16:03:24.282075 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:24.282079 27947 net.cpp:157] Top shape: 1 4096 (4096)
I0727 16:03:24.282083 27947 net.cpp:165] Memory required for data: 466835776
I0727 16:03:24.282085 27947 layer_factory.hpp:77] Creating layer cls_score
I0727 16:03:24.282096 27947 net.cpp:106] Creating Layer cls_score
I0727 16:03:24.282114 27947 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0727 16:03:24.282135 27947 net.cpp:411] cls_score -> cls_score
I0727 16:03:24.284333 27947 net.cpp:150] Setting up cls_score
I0727 16:03:24.284353 27947 net.cpp:157] Top shape: 1 21 (21)
I0727 16:03:24.284355 27947 net.cpp:165] Memory required for data: 466835860
I0727 16:03:24.284359 27947 net.cpp:514] Sharing parameters 'cls_score_w' owned by layer 'cls_score_readonly', param index 0
I0727 16:03:24.284381 27947 net.cpp:514] Sharing parameters 'cls_score_b' owned by layer 'cls_score_readonly', param index 1
I0727 16:03:24.284435 27947 layer_factory.hpp:77] Creating layer bbox_pred
I0727 16:03:24.284451 27947 net.cpp:106] Creating Layer bbox_pred
I0727 16:03:24.284456 27947 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0727 16:03:24.284463 27947 net.cpp:411] bbox_pred -> bbox_pred
I0727 16:03:24.293534 27947 net.cpp:150] Setting up bbox_pred
I0727 16:03:24.293555 27947 net.cpp:157] Top shape: 1 84 (84)
I0727 16:03:24.293558 27947 net.cpp:165] Memory required for data: 466836196
I0727 16:03:24.293562 27947 net.cpp:514] Sharing parameters 'bbox_pred_w' owned by layer 'bbox_pred_readonly', param index 0
I0727 16:03:24.293566 27947 net.cpp:514] Sharing parameters 'bbox_pred_b' owned by layer 'bbox_pred_readonly', param index 1
I0727 16:03:24.293571 27947 layer_factory.hpp:77] Creating layer loss_cls
I0727 16:03:24.293599 27947 net.cpp:106] Creating Layer loss_cls
I0727 16:03:24.293607 27947 net.cpp:454] loss_cls <- cls_score
I0727 16:03:24.293612 27947 net.cpp:454] loss_cls <- labels_hard
I0727 16:03:24.293630 27947 net.cpp:411] loss_cls -> loss_cls
I0727 16:03:24.293642 27947 layer_factory.hpp:77] Creating layer loss_cls
I0727 16:03:24.294661 27947 net.cpp:150] Setting up loss_cls
I0727 16:03:24.294688 27947 net.cpp:157] Top shape: (1)
I0727 16:03:24.294713 27947 net.cpp:160]     with loss weight 1
I0727 16:03:24.294731 27947 net.cpp:165] Memory required for data: 466836200
I0727 16:03:24.294736 27947 layer_factory.hpp:77] Creating layer loss_bbox
I0727 16:03:24.294744 27947 net.cpp:106] Creating Layer loss_bbox
I0727 16:03:24.294747 27947 net.cpp:454] loss_bbox <- bbox_pred
I0727 16:03:24.294767 27947 net.cpp:454] loss_bbox <- bbox_targets_hard
I0727 16:03:24.294785 27947 net.cpp:454] loss_bbox <- bbox_inside_weights_hard
I0727 16:03:24.294814 27947 net.cpp:454] loss_bbox <- bbox_outside_weights_hard
I0727 16:03:24.294833 27947 net.cpp:411] loss_bbox -> loss_bbox
I0727 16:03:24.294944 27947 net.cpp:150] Setting up loss_bbox
I0727 16:03:24.294956 27947 net.cpp:157] Top shape: (1)
I0727 16:03:24.294960 27947 net.cpp:160]     with loss weight 1
I0727 16:03:24.294965 27947 net.cpp:165] Memory required for data: 466836204
I0727 16:03:24.294968 27947 net.cpp:226] loss_bbox needs backward computation.
I0727 16:03:24.294989 27947 net.cpp:226] loss_cls needs backward computation.
I0727 16:03:24.295013 27947 net.cpp:226] bbox_pred needs backward computation.
I0727 16:03:24.295027 27947 net.cpp:226] cls_score needs backward computation.
I0727 16:03:24.295048 27947 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0727 16:03:24.295061 27947 net.cpp:226] drop7 needs backward computation.
I0727 16:03:24.295066 27947 net.cpp:226] relu7 needs backward computation.
I0727 16:03:24.295069 27947 net.cpp:226] fc7 needs backward computation.
I0727 16:03:24.295073 27947 net.cpp:226] drop6 needs backward computation.
I0727 16:03:24.295075 27947 net.cpp:226] relu6 needs backward computation.
I0727 16:03:24.295078 27947 net.cpp:226] fc6 needs backward computation.
I0727 16:03:24.295081 27947 net.cpp:226] roi_pool5 needs backward computation.
I0727 16:03:24.295097 27947 net.cpp:226] hard_roi_mining needs backward computation.
I0727 16:03:24.295115 27947 net.cpp:228] cls_prob_readonly does not need backward computation.
I0727 16:03:24.295126 27947 net.cpp:228] bbox_pred_readonly does not need backward computation.
I0727 16:03:24.295130 27947 net.cpp:228] cls_score_readonly does not need backward computation.
I0727 16:03:24.295135 27947 net.cpp:228] fc7_readonly_drop7_readonly_0_split does not need backward computation.
I0727 16:03:24.295137 27947 net.cpp:228] drop7_readonly does not need backward computation.
I0727 16:03:24.295141 27947 net.cpp:228] relu7_readonly does not need backward computation.
I0727 16:03:24.295157 27947 net.cpp:228] fc7_readonly does not need backward computation.
I0727 16:03:24.295171 27947 net.cpp:228] drop6_readonly does not need backward computation.
I0727 16:03:24.295184 27947 net.cpp:228] relu6_readonly does not need backward computation.
I0727 16:03:24.295197 27947 net.cpp:228] fc6_readonly does not need backward computation.
I0727 16:03:24.295241 27947 net.cpp:228] roi_pool5_readonly does not need backward computation.
I0727 16:03:24.295254 27947 net.cpp:228] rois_roi-data_0_split does not need backward computation.
I0727 16:03:24.295259 27947 net.cpp:228] roi-data does not need backward computation.
I0727 16:03:24.295264 27947 net.cpp:228] proposal does not need backward computation.
I0727 16:03:24.295269 27947 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0727 16:03:24.295285 27947 net.cpp:228] rpn_cls_prob does not need backward computation.
I0727 16:03:24.295300 27947 net.cpp:226] rpn_loss_bbox needs backward computation.
I0727 16:03:24.295320 27947 net.cpp:226] rpn_loss_cls needs backward computation.
I0727 16:03:24.295336 27947 net.cpp:226] rpn-data needs backward computation.
I0727 16:03:24.295346 27947 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0727 16:03:24.295352 27947 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0727 16:03:24.295356 27947 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0727 16:03:24.295372 27947 net.cpp:226] rpn_bbox_pred needs backward computation.
I0727 16:03:24.295388 27947 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0727 16:03:24.295402 27947 net.cpp:226] rpn_cls_score needs backward computation.
I0727 16:03:24.295411 27947 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0727 16:03:24.295415 27947 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0727 16:03:24.295418 27947 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0727 16:03:24.295423 27947 net.cpp:226] conv5_3_relu5_3_0_split needs backward computation.
I0727 16:03:24.295425 27947 net.cpp:226] relu5_3 needs backward computation.
I0727 16:03:24.295442 27947 net.cpp:226] conv5_3 needs backward computation.
I0727 16:03:24.295455 27947 net.cpp:226] relu5_2 needs backward computation.
I0727 16:03:24.295460 27947 net.cpp:226] conv5_2 needs backward computation.
I0727 16:03:24.295464 27947 net.cpp:226] relu5_1 needs backward computation.
I0727 16:03:24.295466 27947 net.cpp:226] conv5_1 needs backward computation.
I0727 16:03:24.295470 27947 net.cpp:226] pool4 needs backward computation.
I0727 16:03:24.295473 27947 net.cpp:226] relu4_3 needs backward computation.
I0727 16:03:24.295488 27947 net.cpp:226] conv4_3 needs backward computation.
I0727 16:03:24.295500 27947 net.cpp:226] relu4_2 needs backward computation.
I0727 16:03:24.295518 27947 net.cpp:226] conv4_2 needs backward computation.
I0727 16:03:24.295531 27947 net.cpp:226] relu4_1 needs backward computation.
I0727 16:03:24.295536 27947 net.cpp:226] conv4_1 needs backward computation.
I0727 16:03:24.295541 27947 net.cpp:226] pool3 needs backward computation.
I0727 16:03:24.295543 27947 net.cpp:226] relu3_3 needs backward computation.
I0727 16:03:24.295547 27947 net.cpp:226] conv3_3 needs backward computation.
I0727 16:03:24.295562 27947 net.cpp:226] relu3_2 needs backward computation.
I0727 16:03:24.295575 27947 net.cpp:226] conv3_2 needs backward computation.
I0727 16:03:24.295589 27947 net.cpp:226] relu3_1 needs backward computation.
I0727 16:03:24.295603 27947 net.cpp:226] conv3_1 needs backward computation.
I0727 16:03:24.295616 27947 net.cpp:228] pool2 does not need backward computation.
I0727 16:03:24.295634 27947 net.cpp:228] relu2_2 does not need backward computation.
I0727 16:03:24.295648 27947 net.cpp:228] conv2_2 does not need backward computation.
I0727 16:03:24.295661 27947 net.cpp:228] relu2_1 does not need backward computation.
I0727 16:03:24.295680 27947 net.cpp:228] conv2_1 does not need backward computation.
I0727 16:03:24.295693 27947 net.cpp:228] pool1 does not need backward computation.
I0727 16:03:24.295702 27947 net.cpp:228] relu1_2 does not need backward computation.
I0727 16:03:24.295706 27947 net.cpp:228] conv1_2 does not need backward computation.
I0727 16:03:24.295711 27947 net.cpp:228] relu1_1 does not need backward computation.
I0727 16:03:24.295713 27947 net.cpp:228] conv1_1 does not need backward computation.
I0727 16:03:24.295717 27947 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0727 16:03:24.295722 27947 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0727 16:03:24.295727 27947 net.cpp:228] data_input-data_0_split does not need backward computation.
I0727 16:03:24.295734 27947 net.cpp:228] input-data does not need backward computation.
I0727 16:03:24.295749 27947 net.cpp:270] This network produces output loss_bbox
I0727 16:03:24.295763 27947 net.cpp:270] This network produces output loss_cls
I0727 16:03:24.295783 27947 net.cpp:270] This network produces output rpn_cls_loss
I0727 16:03:24.295795 27947 net.cpp:270] This network produces output rpn_loss_bbox
I0727 16:03:24.386976 27947 net.cpp:283] Network initialization done.
I0727 16:03:24.387279 27947 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from output/FP_Net_end2end/voc_2007_trainval/fpn_iter_70000.caffemodel
[libprotobuf INFO google/protobuf/io/coded_stream.cc:610] Reading dangerously large protocol message.  If the message turns out to be larger than 2147483647 bytes, parsing will be halted for security reasons.  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
[libprotobuf WARNING google/protobuf/io/coded_stream.cc:81] The total number of bytes read was 548429793
Solving...
allrois: 128
hard: 1
hard: 1
hard: 1
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
I0727 16:03:25.584975 27947 solver.cpp:229] Iteration 0, loss = 1.20572
I0727 16:03:25.585031 27947 solver.cpp:245]     Train net output #0: loss_bbox = 0.855645 (* 1 = 0.855645 loss)
I0727 16:03:25.585070 27947 solver.cpp:245]     Train net output #1: loss_cls = 0.0820813 (* 1 = 0.0820813 loss)
I0727 16:03:25.585086 27947 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.000740948 (* 1 = 0.000740948 loss)
I0727 16:03:25.585101 27947 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0150258 (* 1 = 0.0150258 loss)
I0727 16:03:25.585124 27947 sgd_solver.cpp:106] Iteration 0, lr = 0.002
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
I0727 16:03:39.769739 27947 solver.cpp:229] Iteration 20, loss = 0.843574
I0727 16:03:39.769806 27947 solver.cpp:245]     Train net output #0: loss_bbox = 0.930692 (* 1 = 0.930692 loss)
I0727 16:03:39.769814 27947 solver.cpp:245]     Train net output #1: loss_cls = 0.201987 (* 1 = 0.201987 loss)
I0727 16:03:39.769819 27947 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.00406536 (* 1 = 0.00406536 loss)
I0727 16:03:39.769825 27947 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0513754 (* 1 = 0.0513754 loss)
I0727 16:03:39.769832 27947 sgd_solver.cpp:106] Iteration 20, lr = 0.002
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
I0727 16:03:54.034575 27947 solver.cpp:229] Iteration 40, loss = 0.94292
I0727 16:03:54.034654 27947 solver.cpp:245]     Train net output #0: loss_bbox = 0.459524 (* 1 = 0.459524 loss)
I0727 16:03:54.034664 27947 solver.cpp:245]     Train net output #1: loss_cls = 0.168709 (* 1 = 0.168709 loss)
I0727 16:03:54.034672 27947 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.0143109 (* 1 = 0.0143109 loss)
I0727 16:03:54.034677 27947 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0494208 (* 1 = 0.0494208 loss)
I0727 16:03:54.034685 27947 sgd_solver.cpp:106] Iteration 40, lr = 0.002
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
allrois: 128
hard: 64
hard: 64
hard: 64
hard: 64
hard: 64
Traceback (most recent call last):
  File "./tools/train_net.py", line 113, in <module>
    max_iters=args.max_iters)
  File "/home/ubuntu/Work/brbchen/unskychen/faster_rcnn_min_ohem/tools/../lib/fast_rcnn/train.py", line 160, in train_net
    model_paths = sw.train_model(max_iters)
  File "/home/ubuntu/Work/brbchen/unskychen/faster_rcnn_min_ohem/tools/../lib/fast_rcnn/train.py", line 101, in train_model
    self.solver.step(1)
  File "/home/ubuntu/Work/brbchen/unskychen/faster_rcnn_min_ohem/tools/../lib/rpn/anchor_target_layer.py", line 255, in reshape
    def reshape(self, bottom, top):
KeyboardInterrupt
